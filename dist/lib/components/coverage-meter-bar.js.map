{"version":3,"sources":["../../../src/lib/components/coverage-meter-bar.jsx"],"names":["FlowCoverageMeterBar","props","threshold","thresholdUncovered","uncoveredCount","percent","color","style","padding","height"],"mappings":"AAAA;;;;;kBAMwBA,oB;;AAFxB;;;;;;AAEe,SAASA,oBAAT,CACbC,KADa,EAOb;AAAA,MAEEC,SAFF,GAMID,KANJ,CAEEC,SAFF;AAAA,MAGEC,kBAHF,GAMIF,KANJ,CAGEE,kBAHF;AAAA,MAIEC,cAJF,GAMIH,KANJ,CAIEG,cAJF;AAAA,MAKEC,OALF,GAMIJ,KANJ,CAKEI,OALF;;;AAQA,MAAIC,cAAJ;AACA,MAAIH,kBAAJ,EAAwB;AACtBG,YAAQF,kBAAkBD,kBAAlB,GAAuC,OAAvC,GAAiD,KAAzD;AACD,GAFD,MAEO;AACLG,YAAQD,WAAWH,SAAX,GAAuB,OAAvB,GAAiC,KAAzC;AACD;;AAED,MAAMK,QAAQ;AACZC,aAAS,CADG,EACAC,QAAQ;AADR,GAAd;AAGA,SACE,uCAAK,WAAW,SAASH,KAAzB,EAAgC,OAAOC,KAAvC,GADF;AAGD","file":"coverage-meter-bar.js","sourcesContent":["'use strict';\n\n// @flow\n\nimport React from 'react';\n\nexport default function FlowCoverageMeterBar(\n  props: {\n    percent: number,\n    threshold: number,\n    thresholdUncovered: number,\n    uncoveredCount: number\n  }\n) {\n  const {\n    threshold,\n    thresholdUncovered,\n    uncoveredCount,\n    percent\n  } = props;\n\n  let color;\n  if (thresholdUncovered) {\n    color = uncoveredCount <= thresholdUncovered ? 'green' : 'red';\n  } else {\n    color = percent >= threshold ? 'green' : 'red';\n  }\n\n  const style = {\n    padding: 0, height: 12\n  };\n  return (\n    <div className={'row ' + color} style={style}/>\n  );\n}\n"]}